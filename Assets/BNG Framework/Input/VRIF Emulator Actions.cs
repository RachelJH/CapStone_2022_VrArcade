//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/BNG Framework/Input/VRIF Emulator Actions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @VRIFEmulatorActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @VRIFEmulatorActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""VRIF Emulator Actions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""31215e84-1b61-464c-8eae-95217566697c"",
            ""actions"": [
                {
                    ""name"": ""Lock Camera"",
                    ""type"": ""Button"",
                    ""id"": ""9757656b-a3f5-4673-b080-2f545d4a25ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""dd46896f-46d2-4a5a-bda5-90cc0e53a58e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Increase Player Height"",
                    ""type"": ""Value"",
                    ""id"": ""9a07229e-920a-4324-8d60-ce8fedb06aa6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Decrease Player Height"",
                    ""type"": ""Value"",
                    ""id"": ""3d421c66-43c7-4c9d-a0f4-866aa5158b03"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""EmulateLeftGrip"",
                    ""type"": ""Button"",
                    ""id"": ""7b609984-6a1d-4464-861f-0cd19db52751"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EmulateLeftTrigger"",
                    ""type"": ""Button"",
                    ""id"": ""5d21f931-8d62-4a4b-8f85-574609f8546b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EmulateRightGrip"",
                    ""type"": ""Button"",
                    ""id"": ""ed2f557c-f26f-415c-b65e-1aebcb2ca944"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EmulateRightTrigger"",
                    ""type"": ""Button"",
                    ""id"": ""e1ba459e-c83f-4a08-bac3-da13029622bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EmulateLeftThumbNear"",
                    ""type"": ""Button"",
                    ""id"": ""e0cb838e-2362-4bae-9677-4b21e9e12d45"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EmulateRightThumbNear"",
                    ""type"": ""Button"",
                    ""id"": ""a745dd8f-9336-40ee-a899-3411b251aa54"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""64f77f3e-8c3c-4a24-8cbf-e9cb369e68eb"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Increase Player Height"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""adc567ee-10b2-4eb1-8529-2f7dbba3a392"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decrease Player Height"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d803e7f9-a19d-4683-a662-db0308474a09"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EmulateLeftGrip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28757d99-db95-4aa2-8010-ec1a9eaad4e4"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EmulateLeftTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""247e60bf-6b69-43e8-b9ab-6a2915cd4a51"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EmulateRightTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15fe0069-8e64-46e0-acf5-31805a447fc0"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EmulateRightGrip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc76781d-dad5-4bfe-88f6-b7ebc1c95637"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EmulateLeftThumbNear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b805753-c9c6-40b1-bf32-9a78183af1c7"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EmulateRightThumbNear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49aa5d7f-ba48-40df-b9b7-8e03fe85a049"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""303ba459-8e39-4319-83aa-284b12b6a36a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lock Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_LockCamera = m_Player.FindAction("Lock Camera", throwIfNotFound: true);
        m_Player_CameraLook = m_Player.FindAction("Camera Look", throwIfNotFound: true);
        m_Player_IncreasePlayerHeight = m_Player.FindAction("Increase Player Height", throwIfNotFound: true);
        m_Player_DecreasePlayerHeight = m_Player.FindAction("Decrease Player Height", throwIfNotFound: true);
        m_Player_EmulateLeftGrip = m_Player.FindAction("EmulateLeftGrip", throwIfNotFound: true);
        m_Player_EmulateLeftTrigger = m_Player.FindAction("EmulateLeftTrigger", throwIfNotFound: true);
        m_Player_EmulateRightGrip = m_Player.FindAction("EmulateRightGrip", throwIfNotFound: true);
        m_Player_EmulateRightTrigger = m_Player.FindAction("EmulateRightTrigger", throwIfNotFound: true);
        m_Player_EmulateLeftThumbNear = m_Player.FindAction("EmulateLeftThumbNear", throwIfNotFound: true);
        m_Player_EmulateRightThumbNear = m_Player.FindAction("EmulateRightThumbNear", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_LockCamera;
    private readonly InputAction m_Player_CameraLook;
    private readonly InputAction m_Player_IncreasePlayerHeight;
    private readonly InputAction m_Player_DecreasePlayerHeight;
    private readonly InputAction m_Player_EmulateLeftGrip;
    private readonly InputAction m_Player_EmulateLeftTrigger;
    private readonly InputAction m_Player_EmulateRightGrip;
    private readonly InputAction m_Player_EmulateRightTrigger;
    private readonly InputAction m_Player_EmulateLeftThumbNear;
    private readonly InputAction m_Player_EmulateRightThumbNear;
    public struct PlayerActions
    {
        private @VRIFEmulatorActions m_Wrapper;
        public PlayerActions(@VRIFEmulatorActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @LockCamera => m_Wrapper.m_Player_LockCamera;
        public InputAction @CameraLook => m_Wrapper.m_Player_CameraLook;
        public InputAction @IncreasePlayerHeight => m_Wrapper.m_Player_IncreasePlayerHeight;
        public InputAction @DecreasePlayerHeight => m_Wrapper.m_Player_DecreasePlayerHeight;
        public InputAction @EmulateLeftGrip => m_Wrapper.m_Player_EmulateLeftGrip;
        public InputAction @EmulateLeftTrigger => m_Wrapper.m_Player_EmulateLeftTrigger;
        public InputAction @EmulateRightGrip => m_Wrapper.m_Player_EmulateRightGrip;
        public InputAction @EmulateRightTrigger => m_Wrapper.m_Player_EmulateRightTrigger;
        public InputAction @EmulateLeftThumbNear => m_Wrapper.m_Player_EmulateLeftThumbNear;
        public InputAction @EmulateRightThumbNear => m_Wrapper.m_Player_EmulateRightThumbNear;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @LockCamera.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLockCamera;
                @LockCamera.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLockCamera;
                @LockCamera.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLockCamera;
                @CameraLook.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCameraLook;
                @CameraLook.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCameraLook;
                @CameraLook.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCameraLook;
                @IncreasePlayerHeight.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnIncreasePlayerHeight;
                @IncreasePlayerHeight.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnIncreasePlayerHeight;
                @IncreasePlayerHeight.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnIncreasePlayerHeight;
                @DecreasePlayerHeight.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDecreasePlayerHeight;
                @DecreasePlayerHeight.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDecreasePlayerHeight;
                @DecreasePlayerHeight.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDecreasePlayerHeight;
                @EmulateLeftGrip.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateLeftGrip;
                @EmulateLeftGrip.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateLeftGrip;
                @EmulateLeftGrip.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateLeftGrip;
                @EmulateLeftTrigger.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateLeftTrigger;
                @EmulateLeftTrigger.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateLeftTrigger;
                @EmulateLeftTrigger.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateLeftTrigger;
                @EmulateRightGrip.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateRightGrip;
                @EmulateRightGrip.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateRightGrip;
                @EmulateRightGrip.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateRightGrip;
                @EmulateRightTrigger.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateRightTrigger;
                @EmulateRightTrigger.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateRightTrigger;
                @EmulateRightTrigger.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateRightTrigger;
                @EmulateLeftThumbNear.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateLeftThumbNear;
                @EmulateLeftThumbNear.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateLeftThumbNear;
                @EmulateLeftThumbNear.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateLeftThumbNear;
                @EmulateRightThumbNear.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateRightThumbNear;
                @EmulateRightThumbNear.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateRightThumbNear;
                @EmulateRightThumbNear.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEmulateRightThumbNear;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LockCamera.started += instance.OnLockCamera;
                @LockCamera.performed += instance.OnLockCamera;
                @LockCamera.canceled += instance.OnLockCamera;
                @CameraLook.started += instance.OnCameraLook;
                @CameraLook.performed += instance.OnCameraLook;
                @CameraLook.canceled += instance.OnCameraLook;
                @IncreasePlayerHeight.started += instance.OnIncreasePlayerHeight;
                @IncreasePlayerHeight.performed += instance.OnIncreasePlayerHeight;
                @IncreasePlayerHeight.canceled += instance.OnIncreasePlayerHeight;
                @DecreasePlayerHeight.started += instance.OnDecreasePlayerHeight;
                @DecreasePlayerHeight.performed += instance.OnDecreasePlayerHeight;
                @DecreasePlayerHeight.canceled += instance.OnDecreasePlayerHeight;
                @EmulateLeftGrip.started += instance.OnEmulateLeftGrip;
                @EmulateLeftGrip.performed += instance.OnEmulateLeftGrip;
                @EmulateLeftGrip.canceled += instance.OnEmulateLeftGrip;
                @EmulateLeftTrigger.started += instance.OnEmulateLeftTrigger;
                @EmulateLeftTrigger.performed += instance.OnEmulateLeftTrigger;
                @EmulateLeftTrigger.canceled += instance.OnEmulateLeftTrigger;
                @EmulateRightGrip.started += instance.OnEmulateRightGrip;
                @EmulateRightGrip.performed += instance.OnEmulateRightGrip;
                @EmulateRightGrip.canceled += instance.OnEmulateRightGrip;
                @EmulateRightTrigger.started += instance.OnEmulateRightTrigger;
                @EmulateRightTrigger.performed += instance.OnEmulateRightTrigger;
                @EmulateRightTrigger.canceled += instance.OnEmulateRightTrigger;
                @EmulateLeftThumbNear.started += instance.OnEmulateLeftThumbNear;
                @EmulateLeftThumbNear.performed += instance.OnEmulateLeftThumbNear;
                @EmulateLeftThumbNear.canceled += instance.OnEmulateLeftThumbNear;
                @EmulateRightThumbNear.started += instance.OnEmulateRightThumbNear;
                @EmulateRightThumbNear.performed += instance.OnEmulateRightThumbNear;
                @EmulateRightThumbNear.canceled += instance.OnEmulateRightThumbNear;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnLockCamera(InputAction.CallbackContext context);
        void OnCameraLook(InputAction.CallbackContext context);
        void OnIncreasePlayerHeight(InputAction.CallbackContext context);
        void OnDecreasePlayerHeight(InputAction.CallbackContext context);
        void OnEmulateLeftGrip(InputAction.CallbackContext context);
        void OnEmulateLeftTrigger(InputAction.CallbackContext context);
        void OnEmulateRightGrip(InputAction.CallbackContext context);
        void OnEmulateRightTrigger(InputAction.CallbackContext context);
        void OnEmulateLeftThumbNear(InputAction.CallbackContext context);
        void OnEmulateRightThumbNear(InputAction.CallbackContext context);
    }
}
